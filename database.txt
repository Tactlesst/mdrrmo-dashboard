CREATE TABLE pcr_forms (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  patient_name TEXT NOT NULL,
  date DATE NOT NULL,
  location TEXT,
  recorder TEXT NOT NULL, -- auto-filled from admin/responders.name
  full_form JSONB NOT NULL DEFAULT '{}'::jsonb,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  created_by_type TEXT NOT NULL CHECK (created_by_type IN ('admin', 'responder')),
  created_by_id UUID NOT NULL REFERENCES admins(id) ON DELETE CASCADE
);


{
  "case_number": "",
  "age": null,
  "sex": "",
  "contact_number": "",
  "address": "",
  "poi_type": "",
  "poi_details": "",
  "vitals": {
    "blood_pressure": "",
    "pulse_rate": null,
    "respiratory_rate": null,
    "temperature": "",
    "oxygen_saturation": "",
    "gcs_eye": null,
    "gcs_verbal": null,
    "gcs_motor": null
  },
  "history_present_illness": "",
  "past_medical_history": "",
  "medications": "",
  "allergies": "",
  "body_diagram": ["right-leg", "left-arm"],
  "waiver_signed": null
}


CREATE TABLE provinces (
  id SERIAL PRIMARY KEY,
  name TEXT UNIQUE NOT NULL
);
CREATE TABLE municipalities (
  id SERIAL PRIMARY KEY,
  name TEXT NOT NULL,
  province_id INTEGER REFERENCES provinces(id)
);

CREATE TABLE barangays (
  id SERIAL PRIMARY KEY,
  name TEXT NOT NULL,
  municipality_id INTEGER REFERENCES municipalities(id)
);

CREATE TABLE streets (
  id SERIAL PRIMARY KEY,
  name TEXT NOT NULL,
  barangay_id INTEGER REFERENCES barangays(id)
);


CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  email VARCHAR(100) UNIQUE NOT NULL,
  password TEXT,
  dob DATE,
  contact VARCHAR(20),
  address TEXT,
  profile_image_url TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS alerts (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id INTEGER REFERENCES users(id) ON DELETE SET NULL,  -- user (resident) who sent the alert
  address TEXT,
  type TEXT,
  status TEXT DEFAULT 'Not Responded',
  occurred_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  lat DOUBLE PRECISION NOT NULL,
  lng DOUBLE PRECISION NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  responder_id INTEGER REFERENCES responders(id) ON DELETE SET NULL,
  responded_at TIMESTAMP
);


CREATE TABLE responders (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  email TEXT UNIQUE NOT NULL,
  password TEXT NOT NULL,
  name TEXT NOT NULL,
  profile_image_url TEXT,
  dob DATE,
  contact TEXT,
  address TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE IF NOT EXISTS responder_sessions (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  responder_id INTEGER REFERENCES responders(id) ON DELETE CASCADE,
  is_active BOOLEAN DEFAULT TRUE,
  status TEXT DEFAULT 'offline'
    CHECK (status IN ('offline', 'online', 'standby', 'ready to go')),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  last_active_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  ip_address TEXT,
  user_agent TEXT
);

CREATE TABLE admin_sessions (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  admin_email TEXT REFERENCES admins(email) ON DELETE CASCADE,
  is_active BOOLEAN DEFAULT TRUE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  last_active_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  ip_address TEXT,
  user_agent TEXT
);

CREATE TABLE login_logs (
  id SERIAL PRIMARY KEY,
  admin_id INTEGER REFERENCES admins(id) ON DELETE CASCADE,
  email TEXT,
  ip_address TEXT,
  user_agent TEXT,
  login_time TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE IF NOT EXISTS admins (
  id SERIAL PRIMARY KEY,
  email TEXT UNIQUE NOT NULL,
  password TEXT NOT NULL,
  name TEXT DEFAULT 'Administrator',
  image_url TEXT DEFAULT NULL,
  dob DATE DEFAULT NULL,          -- Date of Birth
  contact TEXT DEFAULT NULL,      -- Contact number
  address TEXT DEFAULT NULL       -- Address
);

CREATE TABLE responder_pins (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  responder_id INTEGER NOT NULL UNIQUE,
  pin TEXT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (responder_id) REFERENCES responders(id) ON DELETE CASCADE
);

INSERT INTO responder_pins (responder_id, pin, expires_at)
VALUES (
  1,                 
  '1233',            
  NOW() + INTERVAL '1 hour'  
);
